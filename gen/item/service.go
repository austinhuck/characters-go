// Code generated by goa v3.9.1, DO NOT EDIT.
//
// item service
//
// Command:
// $ goa gen github.com/austinhuck/characters-go/design

package item

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Item service.
type Service interface {
	// GetItems implements getItems.
	GetItems(context.Context) (res []*Item, err error)
	// GetItem implements getItem.
	GetItem(context.Context, *ItemID) (res *Item, err error)
	// CreateItem implements createItem.
	CreateItem(context.Context, *ItemNew) (res *Item, err error)
	// UpdateItem implements updateItem.
	UpdateItem(context.Context, *Item) (res *Item, err error)
	// DeleteItem implements deleteItem.
	DeleteItem(context.Context, *ItemID) (err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "item"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [5]string{"getItems", "getItem", "createItem", "updateItem", "deleteItem"}

// Item is the result type of the item service getItem method.
type Item struct {
	// Item ID
	ID int
	// Item name
	Name string
	// Item description
	Description string
	// Item damage
	Damage uint
	// Item healing
	Healing uint
	// Item protection
	Protection int
}

// ItemID is the payload type of the item service getItem method.
type ItemID struct {
	// Item ID
	ID int
}

// ItemNew is the payload type of the item service createItem method.
type ItemNew struct {
	// Item name
	Name string
	// Item description
	Description string
	// Item damage
	Damage uint
	// Item healing
	Healing uint
	// Item protection
	Protection int
}

// MakeIDNotFound builds a goa.ServiceError from an error.
func MakeIDNotFound(err error) *goa.ServiceError {
	return goa.NewServiceError(err, "IdNotFound", false, false, false)
}

// MakeBadData builds a goa.ServiceError from an error.
func MakeBadData(err error) *goa.ServiceError {
	return goa.NewServiceError(err, "BadData", false, false, false)
}

// MakeIDsExhausted builds a goa.ServiceError from an error.
func MakeIDsExhausted(err error) *goa.ServiceError {
	return goa.NewServiceError(err, "IDsExhausted", false, false, false)
}
