// Code generated by goa v3.9.1, DO NOT EDIT.
//
// character endpoints
//
// Command:
// $ goa gen github.com/austinhuck/characters-go/design

package character

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "character" service endpoints.
type Endpoints struct {
	GetCharacters   goa.Endpoint
	GetCharacter    goa.Endpoint
	CreateCharacter goa.Endpoint
	UpdateCharacter goa.Endpoint
	DeleteCharacter goa.Endpoint
}

// NewEndpoints wraps the methods of the "character" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		GetCharacters:   NewGetCharactersEndpoint(s),
		GetCharacter:    NewGetCharacterEndpoint(s),
		CreateCharacter: NewCreateCharacterEndpoint(s),
		UpdateCharacter: NewUpdateCharacterEndpoint(s),
		DeleteCharacter: NewDeleteCharacterEndpoint(s),
	}
}

// Use applies the given middleware to all the "character" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.GetCharacters = m(e.GetCharacters)
	e.GetCharacter = m(e.GetCharacter)
	e.CreateCharacter = m(e.CreateCharacter)
	e.UpdateCharacter = m(e.UpdateCharacter)
	e.DeleteCharacter = m(e.DeleteCharacter)
}

// NewGetCharactersEndpoint returns an endpoint function that calls the method
// "getCharacters" of service "character".
func NewGetCharactersEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.GetCharacters(ctx)
	}
}

// NewGetCharacterEndpoint returns an endpoint function that calls the method
// "getCharacter" of service "character".
func NewGetCharacterEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*CharacterID)
		return s.GetCharacter(ctx, p)
	}
}

// NewCreateCharacterEndpoint returns an endpoint function that calls the
// method "createCharacter" of service "character".
func NewCreateCharacterEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*CharacterNew)
		return s.CreateCharacter(ctx, p)
	}
}

// NewUpdateCharacterEndpoint returns an endpoint function that calls the
// method "updateCharacter" of service "character".
func NewUpdateCharacterEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*Character)
		return s.UpdateCharacter(ctx, p)
	}
}

// NewDeleteCharacterEndpoint returns an endpoint function that calls the
// method "deleteCharacter" of service "character".
func NewDeleteCharacterEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*CharacterID)
		return nil, s.DeleteCharacter(ctx, p)
	}
}
